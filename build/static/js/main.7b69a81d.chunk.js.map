{"version":3,"sources":["logo.svg","components/filter_component.js","components/list_component.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","FilterComponent","props","handleChange","event","target","checked","name","filetrStatus","push","value","filetrSpecies","filetrOrigin","filetrGender","removerArray","_","element","filteredArray","updatedFilter","status","Status","species","origin","gender","console","log","bind","className","id","this","map","el","key","type","onChange","React","Component","ListComponent","require","removeFilter","state","filterArray","OrderFilterArray","clearAllFilter","orderByValue","removeAllFilter","filterSearch","lg","Badge","pill","variant","onClick","sp","xs","CardGroup","Card","Img","src","image","Title","created","ListGroup","ListGroupItem","location","App","searchListArray","items","array","length","includes","data","setState","error","isLoaded","fetch","then","res","json","result","originArray","results","message","Navbar","bg","Brand","href","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yJAAAA,EAAOC,QAAU,IAA0B,kC,6LCG9BC,EAAb,YACI,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAaVC,aAAe,SAACC,GAEZ,IAA0B,IAAvBA,EAAMC,OAAOC,QACW,WAApBF,EAAMC,OAAOE,KACZ,EAAKC,aAAaC,KAAKL,EAAMC,OAAOK,OACX,YAApBN,EAAMC,OAAOE,KAClB,EAAKI,cAAcF,KAAKL,EAAMC,OAAOK,OACZ,WAApBN,EAAMC,OAAOE,KAClB,EAAKK,aAAaH,KAAKL,EAAMC,OAAOK,OACX,WAApBN,EAAMC,OAAOE,MAClB,EAAKM,aAAaJ,KAAKL,EAAMC,OAAOK,YAGxC,GAAuB,WAApBN,EAAMC,OAAOE,KAAgB,CAC5B,IAAIO,EAAaC,SAAS,EAAKP,cAAa,SAASQ,GAChD,GAAGA,IAAUZ,EAAMC,OAAOK,MACtB,OAAOM,KAGf,EAAKR,aAAaM,OACjB,GAAuB,YAApBV,EAAMC,OAAOE,KAAiB,CAC/BO,EAAaC,SAAS,EAAKJ,eAAc,SAASK,GAElD,GAAGA,IAAUZ,EAAMC,OAAOK,MACtB,OAAOM,KAGf,EAAKL,cAAcG,OAEjB,GAAuB,WAApBV,EAAMC,OAAOE,KAAgB,CAC9BO,EAAaC,SAAS,EAAKH,cAAa,SAASI,GAEhD,GAAGA,IAAUZ,EAAMC,OAAOK,MACtB,OAAOM,KAGf,EAAKJ,aAAaE,OACjB,GAAuB,WAApBV,EAAMC,OAAOE,KAAgB,CAC9BO,EAAaC,SAAS,EAAKF,cAAa,SAASG,GAEhD,GAAGA,IAAUZ,EAAMC,OAAOK,MACtB,OAAOM,KAGf,EAAKH,aAAaC,EAG3B,IAAIG,EAAc,CACd,OAAS,EAAKT,aACd,QAAU,EAAKG,cACf,OAAS,EAAKC,aACd,OAAS,EAAKC,cAEnB,EAAKX,MAAMgB,cAAcD,IAjExB,EAAKE,OAASjB,EAAMkB,OACpB,EAAKC,QAAUnB,EAAMmB,QACrB,EAAKC,OAASpB,EAAMoB,OACpB,EAAKC,OAASrB,EAAMqB,OACpBC,QAAQC,IAAI,EAAKJ,SACjB,EAAKb,aAAa,GAClB,EAAKG,cAAc,GACnB,EAAKC,aAAa,GAClB,EAAKC,aAAa,GAElB,EAAKV,aAAe,EAAKA,aAAauB,KAAlB,gBAZL,EADvB,sEAsEc,IAAD,OACL,OACI,6BACI,uCACA,yBAAKC,UAAU,cAAf,KACA,yBAAKC,GAAG,YAAYD,UAAU,aAC9B,6BACI,uCACCE,KAAKR,QAAQS,KAAI,SAAAC,GAAE,OAEhB,yBAAKC,IAAKD,EAAIJ,UAAU,YACpB,+BACI,2BAAOM,KAAK,WAAW1B,KAAK,UAAWG,MAAOqB,EAAIG,SAAU,EAAK/B,eADrE,IACuF4B,QAMnG,6BACI,sCACCF,KAAKN,OAAOO,KAAI,SAAAC,GAAE,OACf,yBAAKC,IAAKD,EAAIJ,UAAU,YACpB,+BACI,2BAAOM,KAAK,WAAW1B,KAAK,SAAUG,MAAOqB,EAAIG,SAAU,EAAK/B,eADpE,IACsF4B,QAMlG,6BACI,sCACCF,KAAKP,OAAOQ,KAAI,SAAAC,GAAE,OACf,yBAAKC,IAAKD,EAAIJ,UAAU,YACpB,+BACI,2BAAOM,KAAK,WAAW1B,KAAK,SAAUG,MAAOqB,EAAIG,SAAU,EAAK/B,eADpE,IACsF4B,QAMlG,6BACI,sCACCF,KAAKV,OAAOW,KAAI,SAAAC,GAAE,OACf,yBAAKC,IAAKD,EAAIJ,UAAU,YACpB,+BACI,2BAAOM,KAAK,WAAW1B,KAAK,SAAUG,MAAOqB,EAAIG,SAAU,EAAK/B,eADpE,IACsF4B,cAnHlH,GAAqCI,IAAMC,W,wCCI9BC,GAHLC,EAAQ,GAGhB,YACI,WAAYpC,GAAQ,IAAD,8BACf,4CAAMA,KAQVqC,aAAe,SAAC7B,GACZc,QAAQC,IAAIf,IARZ,EAAK8B,MAAQ,CACTC,YAAa,EAAKvC,MAAMe,eAG5B,EAAKyB,iBAAmB,EAAKA,iBAAiBhB,KAAtB,gBACxB,EAAKiB,eAAiB,EAAKA,eAAejB,KAApB,gBAPP,EADvB,gFAcQG,KAAK3B,MAAM0C,aAAaxC,MAAMC,OAAOK,SAd7C,qCAgBmBN,GACXyB,KAAK3B,MAAM2C,gBAAgBzC,KAjBnC,+BAmBc,IAAD,OAGL,OAFAoB,QAAQC,IAAI,WAAYI,KAAK3B,MAAMe,eACnCO,QAAQC,IAAI,cAAeI,KAAK3B,MAAM4C,cAElC,kBAAC,YAAD,KACI,kBAAC,MAAD,CAAKnB,UAAU,cACX,kBAAC,MAAD,KACI,kDAGR,kBAAC,MAAD,CAAKA,UAAU,cACVE,KAAK3B,MAAM4C,aAAahB,KAAI,SAAAd,GAAO,OAChC,kBAAC,MAAD,CAAK+B,GAAI,EAAGf,IAAKhB,EAAQN,OACrB,kBAACsC,EAAA,EAAD,CAAOC,MAAI,EAACC,QAAQ,YAAYxC,MAAOM,EAAQN,OAAQM,EAAQN,MAA/D,IAAsE,0BAAMyC,QAAS,EAAKZ,cAApB,WAIlF,kBAAC,MAAD,CAAKZ,UAAU,cACX,kBAAC,MAAD,CAAKoB,GAAI,KACT,kBAAC,MAAD,CAAKA,GAAI,GACL,4BAAQb,SAAUL,KAAKa,kBACnB,4BAAQhC,MAAM,KAAd,cACA,4BAAQA,MAAM,OAAd,aACA,4BAAQA,MAAM,QAAd,iBAIZ,kBAAC,MAAD,CAAKiB,UAAU,eACVE,KAAK3B,MAAMe,cAAca,KAAI,SAAAsB,GAAE,OAC5B,kBAAC,MAAD,CAAKpB,IAAKoB,EAAGxB,GAAID,UAAU,YAAYoB,GAAI,EAAGM,GAAI,GAC9C,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,IAAN,CAAUN,QAAQ,MAAMO,IAAKL,EAAGM,QAChC,kBAACH,EAAA,EAAKI,MAAN,KACI,4BAAKP,EAAG7C,MACR,8BAAO6C,EAAGQ,UAEd,kBAACC,EAAA,EAAD,CAAWlC,UAAU,oBACjB,kBAACmC,EAAA,EAAD,KACI,kBAAC,MAAD,KACI,kBAAC,MAAD,CAAKnC,UAAU,oBAAf,UACA,kBAAC,MAAD,CAAKA,UAAU,mBAAmByB,EAAGjC,UAG7C,kBAAC2C,EAAA,EAAD,KACI,kBAAC,MAAD,KACI,kBAAC,MAAD,CAAKnC,UAAU,oBAAf,WACA,kBAAC,MAAD,CAAKA,UAAU,mBAAmByB,EAAG/B,WAG7C,kBAACyC,EAAA,EAAD,KACI,kBAAC,MAAD,KACI,kBAAC,MAAD,CAAKnC,UAAU,oBAAf,UACA,kBAAC,MAAD,CAAKA,UAAU,mBAAmByB,EAAG7B,UAG7C,kBAACuC,EAAA,EAAD,KACI,kBAAC,MAAD,KACI,kBAAC,MAAD,CAAKnC,UAAU,oBAAf,UACA,kBAAC,MAAD,CAAKA,UAAU,mBAAmByB,EAAG9B,OAAOf,QAGpD,kBAACuD,EAAA,EAAD,KACI,kBAAC,MAAD,KACI,kBAAC,MAAD,CAAKf,GAAI,EAAGpB,UAAU,oBAAtB,iBACA,kBAAC,MAAD,CAAKoB,GAAI,EAAGpB,UAAU,mBAAmByB,EAAGW,SAASxD,qBApFrG,GAAmC4B,IAAMC,Y,QC8K1B4B,EA5Kf,YACE,WAAY9D,GAAQ,IAAD,8BACjB,4CAAMA,KAsDRgB,cAAgB,SAACR,GAEf,IAAIuD,EAAkB,EAAKzB,MAAM0B,MAC7BC,EAAQ,GACRzD,EAAMW,QAAQ+C,OAAS,IACzBH,EAAkBlD,SAASkD,GAAiB,SAAUjD,GACpD,GAAIN,EAAMW,QAAQgD,SAASrD,EAAQK,SACjC,OAAOL,KAGXN,EAAMW,QAAQS,KAAI,SAAAC,GAChB,IAAIuC,EAAO,CACT,IAAO,UACP,MAASvC,GAEXoC,EAAM1D,KAAK6D,OAIX5D,EAAMS,OAAOiD,OAAS,IACxBH,EAAkBlD,SAASkD,GAAiB,SAAUjD,GACpD,GAAIN,EAAMS,OAAOkD,SAASrD,EAAQG,QAChC,OAAOH,KAGXN,EAAMS,OAAOW,KAAI,SAAAC,GACf,IAAIuC,EAAO,CACT,IAAO,SACP,MAASvC,GAEXoC,EAAM1D,KAAK6D,OAIX5D,EAAMa,OAAO6C,OAAS,IACxBH,EAAkBlD,SAASkD,GAAiB,SAAUjD,GACpD,GAAIN,EAAMa,OAAO8C,SAASrD,EAAQO,QAChC,OAAOP,KAGXN,EAAMa,OAAOO,KAAI,SAAAC,GACf,IAAIuC,EAAO,CACT,IAAO,SACP,MAASvC,GAEXoC,EAAM1D,KAAK6D,OAIX5D,EAAMY,OAAO8C,OAAS,IACxBH,EAAkBlD,SAASkD,GAAiB,SAAUjD,GACpD,GAAIN,EAAMY,OAAO+C,SAASrD,EAAQM,OAAOf,MACvC,OAAOS,KAGXN,EAAMY,OAAOQ,KAAI,SAAAC,GACf,IAAIuC,EAAO,CACT,IAAO,SACP,MAASvC,GAEXoC,EAAM1D,KAAK6D,OAIf,EAAKC,SAAS,CAAEtD,cAAegD,EAAiBnB,aAAcqB,KAvH7C,EAyHnBvB,aAAe,SAAClC,GACd,IAAIO,EAAgB,EAAKuB,MAAMvB,cAClB,GAATP,IACFO,EAAgBF,UAAUE,EAAe,CAAC,MAAO,CAACP,KAEpD,EAAK6D,SAAS,CAAEtD,cAAeA,KA9Hd,EAgInB4B,gBAAgB,SAACzC,GACf,IAAIa,EAAgB,EAAKuB,MAAM0B,MAC/B,EAAKK,SAAS,CAAEtD,cAAeA,KA/H/B,EAAKuB,MAAQ,CACXgC,MAAO,KACPC,UAAU,EACVP,MAAO,GACP/C,OAAQ,GACRE,QAAS,GACTC,OAAQ,GACRC,OAAQ,GACRN,cAAe,GACf6B,aAAc,IAZC,EADrB,iFAgBuB,IAAD,OAClB4B,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACC,IAAIC,EAAchE,SAAS+D,EAAOE,QAAS,UAAUlD,KAAI,SAAAoC,GAAW,OAAOA,EAAM5C,UACjF,EAAKiD,SAAS,CACZE,UAAU,EACVP,MAAOY,EAAOE,QACd/D,cAAe6D,EAAOE,QACtB7D,OAAQJ,SAAS+D,EAAOE,QAAS,UAAUlD,KAAI,SAAAoC,GAG7C,OAAOA,EAAM/C,UAEfE,QAASN,SAAS+D,EAAOE,QAAS,WAAWlD,KAAI,SAAAoC,GAG/C,OAAOA,EAAM7C,WAEfC,OAAQP,SAASgE,EAAa,QAAQjD,KAAI,SAAAoC,GAGxC,OAAOA,EAAM3D,QAEfgB,OAAQR,SAAS+D,EAAOE,QAAS,UAAUlD,KAAI,SAAAoC,GAG7C,OAAOA,EAAM3C,eAInB,SAACiD,GACC,EAAKD,SAAS,CACZE,UAAU,EACVD,eAnDZ,+BAqIY,IAAD,EAC4B3C,KAAKW,MAAhCgC,EADD,EACCA,MAAOC,EADR,EACQA,SAEXrD,GAHG,EACkB8C,MAEZrC,KAAKW,MAAMrB,QACpBE,EAAUQ,KAAKW,MAAMnB,QACrBC,EAASO,KAAKW,MAAMlB,OACpBC,EAASM,KAAKW,MAAMjB,OACJM,KAAKW,MAAMvB,cAC/B,OAAIuD,EACK,uCAAaA,EAAMS,SAChBR,EAIR,6BACE,kBAACS,EAAA,EAAD,CAAQC,GAAG,OAAOjC,QAAQ,QACxB,kBAACgC,EAAA,EAAOE,MAAR,CAAcC,KAAK,SACjB,IADF,wBAMF,kBAAC,YAAD,KACE,kBAAC,MAAD,KACE,kBAAC,MAAD,CAAKtC,GAAI,EAAGpB,UAAU,cACpB,kBAAC,EAAD,CAAiBT,cAAeW,KAAKX,cAAeE,OAAQA,EAAQG,OAAQA,EAAQD,OAAQA,EAAQD,QAASA,KAE/G,kBAAC,MAAD,CAAK0B,GAAI,IACP,kBAAC,EAAD,CAAe9B,cAAeY,KAAKW,MAAMvB,cAAe6B,aAAcjB,KAAKW,MAAMM,aAAcF,aAAcf,KAAKe,aAAcC,gBAAiBhB,KAAKgB,sBAjBzJ,+CAhJb,GAAyBV,IAAMC,WCGXkD,QACW,cAA7BC,OAAOxB,SAASyB,UAEe,UAA7BD,OAAOxB,SAASyB,UAEhBD,OAAOxB,SAASyB,SAASC,MACvB,2DCVNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrB,MAAK,SAAAsB,GACjCA,EAAaC,kB","file":"static/js/main.7b69a81d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport * as _ from 'lodash';\r\n\r\nexport class FilterComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.status = props.Status;\r\n        this.species = props.species;\r\n        this.origin = props.origin;\r\n        this.gender = props.gender;\r\n        console.log(this.species);\r\n        this.filetrStatus=[];\r\n        this.filetrSpecies=[];\r\n        this.filetrOrigin=[];\r\n        this.filetrGender=[];\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange = (event) => {\r\n        //debugger;\r\n        if(event.target.checked===true){\r\n            if(event.target.name==='status'){\r\n                this.filetrStatus.push(event.target.value);\r\n            }else if(event.target.name==='species'){\r\n                this.filetrSpecies.push(event.target.value);\r\n            }else if(event.target.name==='origin'){\r\n                this.filetrOrigin.push(event.target.value);\r\n            }else if(event.target.name==='gender'){\r\n                this.filetrGender.push(event.target.value);\r\n            }\r\n        }else{\r\n            if(event.target.name==='status'){\r\n                var removerArray=_.filter(this.filetrStatus,function(element){\r\n                     if(element!==event.target.value){\r\n                         return element;\r\n                     }\r\n                 });\r\n                 this.filetrStatus=removerArray;\r\n            }else if(event.target.name==='species'){\r\n                var removerArray=_.filter(this.filetrSpecies,function(element){\r\n                   // console.log(element+\"----\"+event.target.value);\r\n                    if(element!==event.target.value){\r\n                        return element;\r\n                    }\r\n                });\r\n                this.filetrSpecies=removerArray;\r\n                //console.log(removerArray);\r\n            }else if(event.target.name==='origin'){\r\n                var removerArray=_.filter(this.filetrOrigin,function(element){\r\n                    // console.log(element+\"----\"+event.target.value);\r\n                     if(element!==event.target.value){\r\n                         return element;\r\n                     }\r\n                 });\r\n                 this.filetrOrigin=removerArray;\r\n            }else if(event.target.name==='gender'){\r\n                var removerArray=_.filter(this.filetrGender,function(element){\r\n                    // console.log(element+\"----\"+event.target.value);\r\n                     if(element!==event.target.value){\r\n                         return element;\r\n                     }\r\n                 });\r\n                 this.filetrGender=removerArray;\r\n            }\r\n        }\r\n        let filteredArray={\r\n            \"status\":this.filetrStatus,\r\n            \"species\":this.filetrSpecies,\r\n            \"origin\":this.filetrOrigin,\r\n            \"gender\":this.filetrGender\r\n        }\r\n       this.props.updatedFilter(filteredArray);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h4>Filters</h4>\r\n                <div className='visible-xs'>X</div>\r\n                <div id=\"filterDiv\" className='hidden-xs'>\r\n                <div>\r\n                    <h5>Species</h5>\r\n                    {this.species.map(el => (\r\n                        \r\n                        <div key={el} className=\"checkbox\">\r\n                            <label>\r\n                                <input type=\"checkbox\" name=\"species\"  value={el} onChange={this.handleChange} /> {el}\r\n                            </label>\r\n                        </div>\r\n                    ))\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <h5>Gender</h5>\r\n                    {this.gender.map(el => (\r\n                        <div key={el} className=\"checkbox\">\r\n                            <label>\r\n                                <input type=\"checkbox\" name=\"gender\"  value={el} onChange={this.handleChange} /> {el}\r\n                            </label>\r\n                        </div>\r\n                    ))\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <h5>Origin</h5>\r\n                    {this.origin.map(el => (\r\n                        <div key={el} className=\"checkbox\">\r\n                            <label>\r\n                                <input type=\"checkbox\" name=\"origin\"  value={el} onChange={this.handleChange} /> {el}\r\n                            </label>\r\n                        </div>\r\n                    ))\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <h5>Status</h5>\r\n                    {this.status.map(el => (\r\n                        <div key={el} className=\"checkbox\">\r\n                            <label>\r\n                                <input type=\"checkbox\" name=\"status\"  value={el} onChange={this.handleChange} /> {el}\r\n                            </label>\r\n                        </div>\r\n                    ))\r\n                    }\r\n                </div>  \r\n                </div>                                              \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n/* var React = require(\"react\");\r\n\r\nmodule.exports = React.createClass({\r\n    render:function(){\r\n        return(\r\n            <div>\r\n                <h2>Filters</h2>\r\n                <div>\r\n                   <h3>Species</h3>\r\n                   <div ClassName=\"checkbox\">\r\n                        <label><input type=\"checkbox\" value=\"\"/>Human</label>\r\n                    </div>\r\n                    <div ClassName=\"checkbox\">\r\n                        <label><input type=\"checkbox\" value=\"\"/>Mytholog</label>\r\n                    </div>\r\n                    <div ClassName=\"checkbox disabled\">\r\n                        <label><input type=\"checkbox\" value=\"\" disabled/>Other species...</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}) */","import React from 'react';\r\nimport { Container, Row, Col } from 'react-grid-system';\r\nimport { Badge, Card, ListGroupItem, ListGroup, CardGroup } from 'react-bootstrap';\r\n\r\nvar _ = require('lodash');\r\n/* eslint-disable */\r\n\r\nexport class ListComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filterArray: this.props.filteredArray\r\n        }\r\n        //this.removeFilter = this.removeFilter.bind(this);\r\n        this.OrderFilterArray = this.OrderFilterArray.bind(this);\r\n        this.clearAllFilter = this.clearAllFilter.bind(this);\r\n    }\r\n    removeFilter = (value) => {\r\n        console.log(value);\r\n    }\r\n    OrderFilterArray() {\r\n        this.props.orderByValue(event.target.value);\r\n    }\r\n    clearAllFilter(event) {\r\n        this.props.removeAllFilter(event);\r\n    }\r\n    render() {\r\n        console.log('resultAr', this.props.filteredArray);\r\n        console.log('searchArray', this.props.filterSearch);\r\n        return (\r\n            <Container>\r\n                <Row className=\"padding-tb\">\r\n                    <Col>\r\n                        <h6>Selected Filters</h6>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"padding-tb\">\r\n                    {this.props.filterSearch.map(element =>\r\n                        <Col lg={1} key={element.value}>\r\n                            <Badge pill variant=\"secondary\" value={element.value}>{element.value} <span onClick={this.removeFilter}>X</span></Badge>\r\n                        </Col>\r\n                    )}\r\n                </Row>\r\n                <Row className=\"padding-tb\">\r\n                    <Col lg={10}></Col>\r\n                    <Col lg={2}>\r\n                        <select onChange={this.OrderFilterArray}>\r\n                            <option value=\"0\">Sort by ID</option>\r\n                            <option value='asc'>Ascending</option>\r\n                            <option value='desc'>Descending</option>\r\n                        </select>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"search-list\">\r\n                    {this.props.filteredArray.map(sp =>\r\n                        <Col key={sp.id} className=\"padding-5\" lg={3} xs={6}>\r\n                            <CardGroup>\r\n                                <Card>\r\n                                    <Card.Img variant=\"top\" src={sp.image} />\r\n                                    <Card.Title>\r\n                                        <h5>{sp.name}</h5>\r\n                                        <span>{sp.created}</span>\r\n                                    </Card.Title>\r\n                                    <ListGroup className=\"list-group-flush\">\r\n                                        <ListGroupItem>\r\n                                            <Row>\r\n                                                <Col className=\"list-group-label\">Status</Col>\r\n                                                <Col className=\"list-group-text\">{sp.status}</Col>\r\n                                            </Row>\r\n                                        </ListGroupItem>\r\n                                        <ListGroupItem>\r\n                                            <Row>\r\n                                                <Col className=\"list-group-label\">Species</Col>\r\n                                                <Col className=\"list-group-text\">{sp.species}</Col>\r\n                                            </Row>\r\n                                        </ListGroupItem>\r\n                                        <ListGroupItem>\r\n                                            <Row>\r\n                                                <Col className=\"list-group-label\">Gender</Col>\r\n                                                <Col className=\"list-group-text\">{sp.gender}</Col>\r\n                                            </Row>\r\n                                        </ListGroupItem>\r\n                                        <ListGroupItem>\r\n                                            <Row>\r\n                                                <Col className=\"list-group-label\">Origin</Col>\r\n                                                <Col className=\"list-group-text\">{sp.origin.name}</Col>\r\n                                            </Row>\r\n                                        </ListGroupItem>\r\n                                        <ListGroupItem>\r\n                                            <Row>\r\n                                                <Col lg={4} className=\"list-group-label\">Last Location</Col>\r\n                                                <Col lg={8} className=\"list-group-text\">{sp.location.name}</Col>\r\n                                            </Row>\r\n                                        </ListGroupItem>\r\n                                    </ListGroup>\r\n                                </Card>\r\n                            </CardGroup>\r\n                        </Col>\r\n                    )}\r\n\r\n                </Row>\r\n            </Container>\r\n\r\n        )\r\n    }\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport * as _ from 'lodash';\nimport './App.css';\nimport { Container, Row, Col } from 'react-grid-system';\nimport { FilterComponent } from './components/filter_component'\nimport { ListComponent } from './components/list_component';\nimport {Navbar} from 'react-bootstrap';\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      status: [],\n      species: [],\n      origin: [],\n      gender: [],\n      filteredArray: [],\n      filterSearch: []\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://rickandmortyapi.com/api/character/\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          let originArray = _.uniqBy(result.results, 'origin').map(items => { return items.origin });\n          this.setState({\n            isLoaded: true,\n            items: result.results,\n            filteredArray: result.results,\n            status: _.uniqBy(result.results, 'status').map(items => {\n              //var data = { selected: false, value: items.status };\n              // return data;\n              return items.status;\n            }),\n            species: _.uniqBy(result.results, 'species').map(items => {\n              // var data = { selected: false, value: items.species };\n              //return data;\n              return items.species\n            }),\n            origin: _.uniqBy(originArray, 'name').map(items => {\n              //var data = { selected: false, value: items.name };\n              //return data;\n              return items.name\n            }),\n            gender: _.uniqBy(result.results, 'gender').map(items => {\n              //var data = { selected: false, value: items.gender };\n              //return data;\n              return items.gender\n            }),\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n  updatedFilter = (value) => {\n\n    var searchListArray = this.state.items;\n    var array = [];\n    if (value.species.length > 0) {\n      searchListArray = _.filter(searchListArray, function (element) {\n        if (value.species.includes(element.species)) {\n          return element;\n        }\n      });\n      value.species.map(el => {\n        var data = {\n          \"key\": 'species',\n          \"value\": el\n        };\n        array.push(data);\n      })\n    }\n\n    if (value.status.length > 0) {\n      searchListArray = _.filter(searchListArray, function (element) {\n        if (value.status.includes(element.status)) {\n          return element;\n        }\n      });\n      value.status.map(el => {\n        var data = {\n          \"key\": 'status',\n          \"value\": el\n        };\n        array.push(data);\n      })\n    }\n\n    if (value.gender.length > 0) {\n      searchListArray = _.filter(searchListArray, function (element) {\n        if (value.gender.includes(element.gender)) {\n          return element;\n        }\n      });\n      value.gender.map(el => {\n        var data = {\n          \"key\": 'gender',\n          \"value\": el\n        };\n        array.push(data);\n      })\n    }\n\n    if (value.origin.length > 0) {\n      searchListArray = _.filter(searchListArray, function (element) {\n        if (value.origin.includes(element.origin.name)) {\n          return element;\n        }\n      });\n      value.origin.map(el => {\n        var data = {\n          \"key\": 'origin',\n          \"value\": el\n        };\n        array.push(data);\n      })\n    }\n    //this.setState({});\n    this.setState({ filteredArray: searchListArray, filterSearch: array });\n  };\n  orderByValue = (value) => {\n    var filteredArray = this.state.filteredArray;\n    if (value != 0)\n      filteredArray = _.orderBy(filteredArray, ['id'], [value]);\n\n    this.setState({ filteredArray: filteredArray });\n  }\n  removeAllFilter=(event)=>{\n    var filteredArray = this.state.items;\n    this.setState({ filteredArray: filteredArray });\n  }\n  render() {\n    const { error, isLoaded, items } = this.state;\n\n    let Status = this.state.status;\n    let species = this.state.species;\n    let origin = this.state.origin;\n    let gender = this.state.gender;\n    let filteredArray = this.state.filteredArray;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div>\n          <Navbar bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"#home\">\n             {' '}\n             Rick and Morty Show\n             </Navbar.Brand>\n          </Navbar>\n\n          <Container>\n            <Row>\n              <Col lg={2} className=\"padding-tb\">\n                <FilterComponent updatedFilter={this.updatedFilter} Status={Status} gender={gender} origin={origin} species={species} ></FilterComponent>\n              </Col>\n              <Col lg={10}>\n                <ListComponent filteredArray={this.state.filteredArray} filterSearch={this.state.filterSearch} orderByValue={this.orderByValue} removeAllFilter={this.removeAllFilter}></ListComponent>\n              </Col>\n            </Row>\n          </Container>\n          {/* </header>       */}\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}